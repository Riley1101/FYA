:root {
    --blade-hue: 120;
    --blade-lightness: 50%;
  }
  
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
  
  body {
    background: #222;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: 100px 50px 1fr;
    min-height: 100vh;
    place-items: center;
    font-family: "Source Sans Pro", sans-serif;
    text-transform: uppercase;
    font-size: 1.5rem;
  }
  
  /* The color pickers */
  
  [name="color"] {
    grid-row: 1 / 2;
    align-self: end;
    margin: 0.5em;
  }
  
  label:not(.hilt) {
    color: white;
    font-weight: bold;
    align-self: start;
  }
  
  /* Lightsaber styling */
  
  .lightsaber {
    margin-top: 50vh;
    grid-column: 1 / -1;
    position: relative;
  }
  
  #on-off {
    width: 0;
    height: 0;
    position: absolute;
}
  
  .hilt {
    cursor: pointer;
    display: block;
    width: 0.75rem;
    height: 7rem;
    background-color: grey;
    border-radius: 0 0 4px 4px;
    background-image: linear-gradient(
      grey 0 10px,
      hsl(39 75% 50%) 0 14px,
      grey 0 15px,
      black 0 20px,
      grey 0 22px,
      black 0 25px,
      grey 0 27px,
      black 0 30px,
      grey 0 32px,
      black 0 35px,
      grey 0 37px,
      black 0 40px,
      grey 0 42px,
      black 0 45px,
      grey 0 47px,
      black 0 50px,
      grey 0 60px,
      hsl(39 75% 50%) 60px 80px,
      grey 0 100%
    );
  }
  
  .blade {
    position: absolute;
    background: white;
    height: 350%;
    width: 100%;
    bottom: 100%;
    border-radius: 100vw 100vw 0 0;
    box-shadow: inset 0 0 4px
        hsl(var(--blade-hue) 100% var(--blade-lightness) / 1),
      0 0 1em hsl(var(--blade-hue) 100% var(--blade-lightness) / 0.8),
      0 0 1.5em hsl(var(--blade-hue) 100% var(--blade-lightness) / 0.7),
      0 0 2em hsl(var(--blade-hue) 100% var(--blade-lightness) / 0.5),
      0 0 3em hsl(var(--blade-hue) 100% var(--blade-lightness) / 0.3),
      0 0 5em hsl(var(--blade-hue) 100% var(--blade-lightness) / 0.2);
    transition: transform 50ms ease-out;
    transform-origin: bottom;
  }
  
  .blade::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: hsl(var(--blade-hue) 100%
     var(--blade-lightness));
    border-radius: inherit;
    filter: blur(0.5em);
    opacity: 1;
    animation: pulse linear 5s infinite;
  }
  
  .blade::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 10;
    border-radius: inherit;
    background: #fff;
  }
  
  @keyframes pulse {
      50% {
          opacity: .5;
      }
  }
  
#on-off:not(:checked) + .blade{
    transform: scaleY(0);
}
#on-off:checked + .blade{
    transform: scaleY(1);
}

#green:checked ~ .lightsaber {
  --blade-hue: 120;
}

#blue:checked ~ .lightsaber {
  --blade-hue: 195;
}

#yellow:checked ~ .lightsaber {
  --blade-hue: 60;
}


#grey:checked ~ .lightsaber {
  --blade-hue: 5;
}

#darksaber:checked ~ .lightsaber {
  --blade-lightness: 100%;
}

#darksaber:checked ~ .lightsaber .blade {
    
  border-radius: 100% / 500px 200px 0 0;
}

#darksaber:checked ~ .lightsaber .blade::before {
  background: black;
}

embed{
    display: none;
    position: absolute;
    pointer-events: 0;
    width: 0;
    height: 0;
}

#on-off:checked ~ embed{
    display: block;
}